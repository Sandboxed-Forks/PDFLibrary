@using System.Collections
@using Newtonsoft.Json
@model Web.Models.PDFData

@{
    ViewBag.Title = "CreatePDF";
    Layout = "~/Views/Shared/_Layout.cshtml";


}

<h2>CreatePDF</h2>

@using (Html.BeginForm("CreatePDF", "Home", FormMethod.Post, new { target = "_blank", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group form-inline">

            <div class="row">
                <label for="file">PDF:</label>
                <input type="file" name="file" id="file" />
            </div>
            
            <br />
            

            <div class="row">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-1", autocomplete = "off" })
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @style = "width: 100px;", autocomplete = "off" } })
                @Html.LabelFor(model => model.MiddleInitial, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.MiddleInitial, new { htmlAttributes = new { @class = "form-control", @style = "width: 50px;", autocomplete = "off" } })
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            </div>

            <div class="row">
                @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-1" })
                @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control", @style = "width: 350px;", autocomplete = "off" } })

            </div>

            <div class="row">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-1", autocomplete = "off" })
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @style = "width: 150px;", autocomplete = "off" } })
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownList("State", DropDownListData.SetSelectedState(Model.State,DropDownListData.States) , new { htmlAttributes = new { @class = "form-control",  autocomplete = "off" } })

                @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control", @style = "width: 75px;", autocomplete = "off" } })
            </div>
            <div class="row">
                @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-1" })
                @Html.EditorFor(model => model.Active)
                @Html.LabelFor(model => model.PointBalance, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.PointBalance, new { htmlAttributes = new { @class = "form-control", @style = "width: 120px;", autocomplete = "off"} })
                @Html.LabelFor(model => model.TIN, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.TIN, new { htmlAttributes = new { @class = "form-control", @style = "width: 120px;", autocomplete = "off" } })
                @Html.LabelFor(model => model.CustomerSince, htmlAttributes: new { @class = "control-label",@style = "vertical-align: middle;" })
                @Html.EditorFor(model => model.CustomerSince, new { htmlAttributes = new { @class = "form-control datepicker", @style = "width: 100px;", autocomplete = "off" } })
            </div>
            

        </div>
        

        <div class="form-group">
            <div class="col-lg-offset-7">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>


}